// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import database "gopkg.in/paysuper/paysuper-database-mongo.v2"
import mock "github.com/stretchr/testify/mock"

// SourceInterface is an autogenerated mock type for the SourceInterface type
type SourceInterface struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *SourceInterface) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Collection provides a mock function with given fields: name
func (_m *SourceInterface) Collection(name string) database.CollectionInterface {
	ret := _m.Called(name)

	var r0 database.CollectionInterface
	if rf, ok := ret.Get(0).(func(string) database.CollectionInterface); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database.CollectionInterface)
		}
	}

	return r0
}

// Drop provides a mock function with given fields:
func (_m *SourceInterface) Drop() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Ping provides a mock function with given fields: ctx
func (_m *SourceInterface) Ping(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
